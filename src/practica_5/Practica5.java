/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package practica_5;

/**
 *
 * @author isaac
 */
//importamos las librerias necesarias
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.InputEvent;
import java.awt.event.KeyEvent;
import java.io.*;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;

public class Practica5 extends JFrame {

    /**
     * Creates new form Practica5
     */
    public Practica5() {
        initComponents();
    }

        private JRadioButton RadiobuBachillerato;
    private JRadioButton RdBtPostgrado;
    private JRadioButton RdboLicenciatura;
    private JRadioButton RdbtMaestria;
    private JSlider SliderIngresos;
    private JSpinner SpEdad;
    private JButton btnGuardo;
    private JComboBox<String> comboGenero;
    private JCheckBox jCheckBox1;
    private JCheckBox jCheckBox2;
    private JCheckBox jCheckBox3;
    private JCheckBox jCheckBox4;
    private JCheckBox jCheckBox5;
    private JCheckBox jCheckBox6;
    private JCheckBox jCheckBox7;
    private JCheckBox jCheckBox8;
    private JCheckBox jCheckBox9;
    private JLabel jLabel1;
    private JLabel jLabel2;
    private JLabel jLabel3;
    private JTextField jTextField1;
    private JLabel lblApellidos;
    private JLabel lblEdad;
    private JLabel lblGenero;
    private JLabel lblIngresos;
    private JLabel lblNombre;
    private JLabel lblNumerodeEncuesta;
    private JLabel lblUltimoGrado;
    private JTextField txtApellidos;
    private JTextField txtNombre;
    static private int numeroEncuesta;
    private JSeparator jSeparator4;
    private JTextField lastFocusedTextField;




    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGrupo = new javax.swing.ButtonGroup();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jMenuBar1 = new javax.swing.JMenuBar();
        btnArchivo = new javax.swing.JMenu();
        btnNueva = new javax.swing.JMenuItem();
        btnGuardar = new javax.swing.JMenuItem();
        btnSalir = new javax.swing.JMenuItem();
        btnEdicion = new javax.swing.JMenu();
        btnLimpiar = new javax.swing.JMenuItem();
        btnCopiar = new javax.swing.JMenuItem();
        btnCortar = new javax.swing.JMenuItem();
        btnPegar = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(800, 600));
        setMinimumSize(new java.awt.Dimension(800, 600));
        setPreferredSize(new java.awt.Dimension(800, 600));
        getContentPane().setLayout(null);
        getContentPane().add(jSeparator1);
        jSeparator1.setBounds(10, 180, 0, 3);
        getContentPane().add(jSeparator2);
        jSeparator2.setBounds(10, 180, 0, 3);
        getContentPane().add(jSeparator3);
        jSeparator3.setBounds(10, 180, 0, 3);

        btnArchivo.setText("Archivo");

        btnNueva.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.SHIFT_DOWN_MASK));
        btnNueva.setText("Nueva encuesta");
        btnNueva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevaActionPerformed(evt);
            }
        });
        btnArchivo.add(btnNueva);

        btnGuardar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        btnGuardar.setText("Guardar");
        btnArchivo.add(btnGuardar);

        btnSalir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_DOWN_MASK));
        btnSalir.setText("Salir");
        btnArchivo.add(btnSalir);

        jMenuBar1.add(btnArchivo);

        btnEdicion.setText("Edicion");

        btnLimpiar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });
        btnEdicion.add(btnLimpiar);

        btnCopiar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        btnCopiar.setText("copiar");
        btnEdicion.add(btnCopiar);

        btnCortar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        btnCortar.setText("cortar");
        btnEdicion.add(btnCortar);

        btnPegar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        btnPegar.setText("pegar");
        btnEdicion.add(btnPegar);

        jMenuBar1.add(btnEdicion);

        setJMenuBar(jMenuBar1);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents





    private void btnNuevaActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnNuevaActionPerformed
        // TODO add your handling code here:
        //se inicializan los elementos de la interfaz grafica
                buttonGrupo = new ButtonGroup();
        jLabel1 = new JLabel();
        lblNumerodeEncuesta = new JLabel();
        lblNombre = new JLabel();
        txtNombre = new JTextField();
        lblApellidos = new JLabel();
        txtApellidos = new JTextField();
        lblEdad = new JLabel();
        SpEdad = new JSpinner();
        lblGenero = new JLabel();
        comboGenero = new JComboBox<>();
        lblUltimoGrado = new JLabel();
        RadiobuBachillerato = new JRadioButton();
        RdBtPostgrado = new JRadioButton();
        RdboLicenciatura = new JRadioButton();
        RdbtMaestria = new JRadioButton();
        jSeparator1 = new JSeparator();
        jSeparator2 = new JSeparator();
        jSeparator3 = new JSeparator();
        jSeparator4 = new JSeparator();
        jCheckBox1 = new JCheckBox();
        jLabel2 = new JLabel();
        jCheckBox2 = new JCheckBox();
        jCheckBox3 = new JCheckBox();
        jCheckBox4 = new JCheckBox();
        jCheckBox5 = new JCheckBox();
        jCheckBox6 = new JCheckBox();
        jCheckBox7 = new JCheckBox();
        jCheckBox8 = new JCheckBox();
        jTextField1 = new JTextField();
        jCheckBox9 = new JCheckBox();
        jLabel3 = new JLabel();
        SliderIngresos = new JSlider();
        btnGuardo = new JButton();
        lblIngresos = new JLabel();

        //se hace reset a la encuesta
        resetEncuesta();


        txtNombre.addFocusListener(new FocusAdapter() {
            public void focusGained(FocusEvent e) {
                lastFocusedTextField = txtNombre;
            }
        });

        txtApellidos.addFocusListener(new FocusAdapter() {
            public void focusGained(FocusEvent e) {
                lastFocusedTextField = txtApellidos;
            }
        });

        jTextField1.addFocusListener(new FocusAdapter() {
            public void focusGained(FocusEvent e) {
                lastFocusedTextField = jTextField1;
            }
        });


        
         jLabel1.setText("N de encuensta");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 20, 140, 19);

        //se inicializa el numero de encuesta, leyendo el archivo Encuestas.txt y se suma 1
        try {
            FileReader archivo = new FileReader("./Encuestas.txt");
            BufferedReader lector = new BufferedReader(archivo);
            String linea;
            while ((linea = lector.readLine()) != null) {
                if (linea.startsWith("Encuesta #")) {
                    numeroEncuesta = Integer.parseInt(linea.substring(10));
                }
            }
            lector.close();
            archivo.close();
        } catch (IOException e) {
            System.out.println("Error al leer el archivo");
        }
        numeroEncuesta++;

        //se le asigna el valor de la variable al label

        lblNumerodeEncuesta.setHorizontalAlignment(SwingConstants.RIGHT);
        lblNumerodeEncuesta.setText(String.valueOf(numeroEncuesta));
        getContentPane().add(lblNumerodeEncuesta);
        lblNumerodeEncuesta.setBounds(140, 20, 18, 19);

        lblNombre.setText("Nombre");
        lblNombre.setMaximumSize(new Dimension(54, 20));
        lblNombre.setMinimumSize(new Dimension(54, 20));
        lblNombre.setPreferredSize(new Dimension(54, 20));
        getContentPane().add(lblNombre);
        lblNombre.setBounds(10, 60, 80, 20);

        txtNombre.setMaximumSize(new Dimension(200, 20));
        txtNombre.setMinimumSize(new Dimension(200, 20));
        txtNombre.setPreferredSize(new Dimension(200, 20));
        txtNombre.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
            }
        });
        getContentPane().add(txtNombre);
        txtNombre.setBounds(110, 60, 200, 25);

        lblApellidos.setText("Apellidos");
        lblApellidos.setMaximumSize(new Dimension(54, 20));
        lblApellidos.setMinimumSize(new Dimension(54, 20));
        lblApellidos.setPreferredSize(new Dimension(54, 20));
        getContentPane().add(lblApellidos);
        lblApellidos.setBounds(410, 60, 150, 20);

        txtApellidos.setMaximumSize(new Dimension(200, 20));
        txtApellidos.setMinimumSize(new Dimension(200, 20));
        txtApellidos.setPreferredSize(new Dimension(200, 20));
        txtApellidos.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
            }
        });
        getContentPane().add(txtApellidos);
        txtApellidos.setBounds(570, 60, 200, 25);

        lblEdad.setText("Edad");
        lblEdad.setMaximumSize(new Dimension(46, 20));
        lblEdad.setMinimumSize(new Dimension(46, 20));
        lblEdad.setPreferredSize(new Dimension(46, 20));
        getContentPane().add(lblEdad);
        lblEdad.setBounds(10, 110, 46, 20);

        SpEdad.setMaximumSize(new Dimension(100, 25));
        SpEdad.setMinimumSize(new Dimension(100, 25));
        SpEdad.setPreferredSize(new Dimension(100, 25));
        getContentPane().add(SpEdad);
        SpEdad.setBounds(120, 110, 100, 25);

        lblGenero.setText("Genero");
        lblGenero.setMaximumSize(new Dimension(45, 20));
        lblGenero.setMinimumSize(new Dimension(45, 20));
        lblGenero.setPreferredSize(new Dimension(45, 20));
        getContentPane().add(lblGenero);
        lblGenero.setBounds(410, 110, 80, 20);

        comboGenero.setModel(new DefaultComboBoxModel<>(new String[] { "Selecciona opcion","Masculino", "Femenino", "Otro","No binario" }));
        getContentPane().add(comboGenero);
        comboGenero.setBounds(570, 110, 110, 25);

        lblUltimoGrado.setText("Ultimo grado");
        getContentPane().add(lblUltimoGrado);
        lblUltimoGrado.setBounds(10, 220, 130, 19);

        buttonGrupo.add(RadiobuBachillerato);
        RadiobuBachillerato.setText("Bachillerato");
        RadiobuBachillerato.setHorizontalTextPosition(SwingConstants.CENTER);
        RadiobuBachillerato.setVerticalTextPosition(SwingConstants.BOTTOM);
        getContentPane().add(RadiobuBachillerato);
        RadiobuBachillerato.setBounds(10, 250, 110, 40);

        buttonGrupo.add(RdBtPostgrado);
        RdBtPostgrado.setText("Postgrado");
        RdBtPostgrado.setHorizontalTextPosition(SwingConstants.CENTER);
        RdBtPostgrado.setVerticalTextPosition(SwingConstants.BOTTOM);
        getContentPane().add(RdBtPostgrado);
        RdBtPostgrado.setBounds(360, 250, 130, 40);

        buttonGrupo.add(RdboLicenciatura);
        RdboLicenciatura.setText("Licenciatura");
        RdboLicenciatura.setHorizontalTextPosition(SwingConstants.CENTER);
        RdboLicenciatura.setVerticalTextPosition(SwingConstants.BOTTOM);
        RdboLicenciatura.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
            }
        });
        getContentPane().add(RdboLicenciatura);
        RdboLicenciatura.setBounds(130, 250, 100, 42);

        buttonGrupo.add(RdbtMaestria);
        RdbtMaestria.setText("Maestria");
        RdbtMaestria.setHorizontalTextPosition(SwingConstants.CENTER);
        RdbtMaestria.setVerticalTextPosition(SwingConstants.BOTTOM);
        RdbtMaestria.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
            }
        });
        getContentPane().add(RdbtMaestria);
        RdbtMaestria.setBounds(250, 250, 100, 40);
        getContentPane().add(jSeparator1);
        jSeparator1.setBounds(10, 180, 50, 10);
        getContentPane().add(jSeparator2);
        jSeparator2.setBounds(10, 180, 50, 10);
        getContentPane().add(jSeparator3);
        jSeparator3.setBounds(10, 180, 50, 10);
        getContentPane().add(jSeparator4);
        jSeparator4.setBounds(0, 180, 800, 10);

        jCheckBox1.setText("Arte");
        getContentPane().add(jCheckBox1);
        jCheckBox1.setBounds(160, 450, 51, 23);

        jLabel2.setText("Gustos e interes");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(10, 370, 130, 19);

        jCheckBox2.setText("Deportes");
        getContentPane().add(jCheckBox2);
        jCheckBox2.setBounds(20, 410, 83, 23);

        jCheckBox3.setText("Cine");
        getContentPane().add(jCheckBox3);
        jCheckBox3.setBounds(20, 450, 52, 23);

        jCheckBox4.setText("Musica");
        getContentPane().add(jCheckBox4);
        jCheckBox4.setBounds(160, 410, 70, 23);

        jCheckBox5.setText("Juegos de mesa");
        getContentPane().add(jCheckBox5);
        jCheckBox5.setBounds(290, 450, 140, 23);

        jCheckBox6.setText("Video Juegos");
        getContentPane().add(jCheckBox6);
        jCheckBox6.setBounds(290, 410, 120, 23);

        jCheckBox7.setText("Taller");
        getContentPane().add(jCheckBox7);
        jCheckBox7.setBounds(440, 450, 90, 23);

        jCheckBox8.setText("Cocina");
        getContentPane().add(jCheckBox8);
        jCheckBox8.setBounds(440, 410, 67, 23);

        jTextField1.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
            }
        });
        getContentPane().add(jTextField1);
        jTextField1.setBounds(650, 410, 85, 25);

        jCheckBox9.setText("otro:");
        getContentPane().add(jCheckBox9);
        jCheckBox9.setBounds(560, 410, 54, 23);

        jLabel3.setText("Ingresos aproximados");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(20, 330, 150, 19);

        SliderIngresos.setMaximum(100000);
        SliderIngresos.setMinimum(5000);
        SliderIngresos.setMinorTickSpacing(1000);
        SliderIngresos.setPaintLabels(true);
        SliderIngresos.addChangeListener(new ChangeListener() {
            public void stateChanged(ChangeEvent evt) {
                SliderIngresosStateChanged(evt);
            }
        });
        getContentPane().add(SliderIngresos);
        SliderIngresos.setBounds(190, 330, 340, 20);

        lblIngresos.setText("5000$");
        getContentPane().add(lblIngresos);
        lblIngresos.setBounds(550, 330, 120, 19);

        btnGuardo.setText("Guardar");
        getContentPane().add(btnGuardo);
        btnGuardo.setBounds(310, 530, 130, 25);

        //se valida que ningun campo este vacio para poder guardar la encuesta
        btnGuardo.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btnGuardoActionPerformed(evt);
                }
        });







        
        
        
    }//GEN-LAST:event_btnNuevaActionPerformed


    //evento del btn guardar
    private void btnGuardoActionPerformed(ActionEvent evt){

        //se inicializan los elementos para guardar
        String nombre;
        String apellidos;
        int edad;
        String genero;
        String ultimoGrado = "";
        int ingresos;

        // Asignar los valores de los campos a las variables
        nombre = txtNombre.getText();
        apellidos = txtApellidos.getText();
        edad = (int)SpEdad.getValue();
        genero = comboGenero.getSelectedItem().toString();





        //validacion de los campos
        if (nombre.isEmpty() || apellidos.isEmpty() || edad == 0 || genero.equals("Selecciona opcion")) {
            JOptionPane.showMessageDialog(this, "Por favor, rellene todos los campos", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        //validar que el nombre y apellidos no contengan numeros
        if (nombre.matches(".*\\d.*") || apellidos.matches(".*\\d.*")) {
            JOptionPane.showMessageDialog(this, "El nombre y apellidos no pueden contener números", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        //validar que edad no sea menor de 18 o mayor de 80
        if (edad < 18 || edad > 80) {
            JOptionPane.showMessageDialog(this, "La edad debe estar entre 18 y 80 años", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        //validar que se haya seleccionado un ultimo grado
        if (buttonGrupo.getSelection() == null) {
            JOptionPane.showMessageDialog(this, "Por favor, seleccione su último grado de estudios", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }











        // Recoger los gustos seleccionados
        JCheckBox[] gustosCheckBoxes = {jCheckBox1, jCheckBox2, jCheckBox3, jCheckBox4, jCheckBox5, jCheckBox6, jCheckBox7, jCheckBox8};
        StringBuilder gustosIntereses = new StringBuilder();
        boolean gustoSeleccionado = true;
        for (JCheckBox checkBox : gustosCheckBoxes) {
            if (checkBox.isSelected()) {
                 gustoSeleccionado = true;

                if (gustosIntereses.length() > 0) {
                    gustosIntereses.append(", ");
                }
                gustosIntereses.append(checkBox.getText());
            }
        }
        if (jCheckBox9.isSelected()) {
             gustoSeleccionado = true;
            if (gustosIntereses.length() > 0) {
                gustosIntereses.append(", ");
            }
            gustosIntereses.append(jTextField1.getText());
        }

        // Validar que al menos un gusto ha sido seleccionado
        if (!gustoSeleccionado) {
            JOptionPane.showMessageDialog(this, "Por favor, seleccione al menos un gusto", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }





        RadiobuBachillerato.setActionCommand("Bachillerato");
        RdBtPostgrado.setActionCommand("Postgrado");
        RdboLicenciatura.setActionCommand("Licenciatura");
        RdbtMaestria.setActionCommand("Maestria");


        ButtonModel selectedModel = buttonGrupo.getSelection();
        if (selectedModel != null) {
            String actionCommand = selectedModel.getActionCommand();
            if (actionCommand != null) {
                switch (actionCommand) {
                    case "Bachillerato":
                        ultimoGrado = "Bachillerato";
                        break;
                    case "Postgrado":
                        ultimoGrado = "Postgrado";
                        break;
                    case "Licenciatura":
                        ultimoGrado = "Licenciatura";
                        break;
                    case "Maestria":
                        ultimoGrado = "Maestria";
                        break;
                }
            } else {
                // Manejar el caso en que ningún ActionCommand esté establecido
                ultimoGrado = "No especificado";
            }
        } else {
            // Manejar el caso en que ningún botón esté seleccionado
            ultimoGrado = "No especificado";
        }

        // Añadir el gusto "otro" si está seleccionado
        if (jCheckBox9.isSelected()) {
            if (gustosIntereses.length() > 0) {
                gustosIntereses.append(", ");
            }
            gustosIntereses.append(jTextField1.getText());
        }

        ingresos = SliderIngresos.getValue();

        //guardar la hora y fecha de la encuesta
        Date fecha = new Date();
        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        String fechaHora = formato.format(fecha);

        //se guardar  en el archivo Encuestas.txt en la carpeta del proyecto


        try {
            FileWriter archivo = new FileWriter("./Encuestas.txt", true);
            PrintWriter escritor = new PrintWriter(archivo);
            escritor.println("Encuesta #" + numeroEncuesta);
            escritor.println("Fecha y hora: " + fechaHora);
            escritor.println("Nombre: " + nombre);
            escritor.println("Apellidos: " + apellidos);
            escritor.println("Edad: " + edad);
            escritor.println("Genero: " + genero);
            escritor.println("Ultimo grado: " + ultimoGrado);
            escritor.println("Gustos e intereses: " + gustosIntereses);
            escritor.println("Ingresos aproximados: " + ingresos);
            escritor.println();
            escritor.close();
            archivo.close();
        } catch (IOException e) {
            System.out.println("Error al guardar la encuesta");
        }




    }


    //evento del btnLimpiar
    private void btnLimpiarActionPerformed(ActionEvent evt) {
        // TODO add your handling code here:
        txtNombre.setText("");
        txtApellidos.setText("");
        SpEdad.setValue(0);
        comboGenero.setSelectedIndex(0);
        buttonGrupo.clearSelection();
        jCheckBox1.setSelected(false);
        jCheckBox2.setSelected(false);
        jCheckBox3.setSelected(false);
        jCheckBox4.setSelected(false);
        jCheckBox5.setSelected(false);
        jCheckBox6.setSelected(false);
        jCheckBox7.setSelected(false);
        jCheckBox8.setSelected(false);

        //se actualiza el numero de encuesta el valor del numeroEncuesta
        lblNumerodeEncuesta.setText(String.valueOf(numeroEncuesta));
        jTextField1.setText("");
        jCheckBox9.setSelected(false);
        SliderIngresos.setValue(5000);
        lblIngresos.setText("5000$");


    }

    //evento del slider






    private void SliderIngresosStateChanged(ChangeEvent evt) {//GEN-FIRST:event_SliderIngresosStateChanged
        // TODO add your handling code here:
        lblIngresos.setText(String.valueOf(SliderIngresos.getValue())+"$");
    }//GEN-LAST:event_SliderIngresosStateChanged


    //evento del btnSalir
    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        System.exit(0);
    }




    private void btnCopiarActionPerformed(java.awt.event.ActionEvent evt) {
        if (lastFocusedTextField != null && lastFocusedTextField.getSelectedText() != null) {
            lastFocusedTextField.copy();
        }
    }

    private void btnCortarActionPerformed(java.awt.event.ActionEvent evt) {
        if (lastFocusedTextField != null && lastFocusedTextField.getSelectedText() != null) {
            lastFocusedTextField.cut();
        }
    }

    private void btnPegarActionPerformed(java.awt.event.ActionEvent evt) {
        if (lastFocusedTextField != null) {
            lastFocusedTextField.paste();
        }
    }

    //resetEncuesta
    private void resetEncuesta() {
        txtNombre.setText("");
        txtApellidos.setText("");
        SpEdad.setValue(0);
        if (comboGenero.getItemCount() > 0) {
            comboGenero.setSelectedIndex(0);
        }
        buttonGrupo.clearSelection();
        jCheckBox1.setSelected(false);
        jCheckBox2.setSelected(false);
        jCheckBox3.setSelected(false);
        jCheckBox4.setSelected(false);
        jCheckBox5.setSelected(false);
        jCheckBox6.setSelected(false);
        jCheckBox7.setSelected(false);
        jCheckBox8.setSelected(false);

        jTextField1.setText("");
        jCheckBox9.setSelected(false);
        SliderIngresos.setValue(5000);
        lblIngresos.setText("5000$");
    }



    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Practica5.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(Practica5.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(Practica5.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(Practica5.class.getName()).log(Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Practica5().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu btnArchivo;
    private javax.swing.JMenuItem btnCopiar;
    private javax.swing.JMenuItem btnCortar;
    private javax.swing.JMenu btnEdicion;
    private javax.swing.JMenuItem btnGuardar;
    private javax.swing.JMenuItem btnLimpiar;
    private javax.swing.JMenuItem btnNueva;
    private javax.swing.JMenuItem btnPegar;
    private javax.swing.JMenuItem btnSalir;
    private javax.swing.ButtonGroup buttonGrupo;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    // End of variables declaration//GEN-END:variables
}
