/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package SegundoParcial.tercerapractica;

import javax.swing.*;
import java.io.*;
import java.util.ArrayList;

/**
 *
 * @author isaac
 */
public class OrdenamientoAlumnos extends javax.swing.JFrame {

    /**
     * Creates new form OrdenamientoAlumnos
     */
    public OrdenamientoAlumnos() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        btnCargarAlumnos = new javax.swing.JMenuItem();
        btnSalir = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(500, 500));
        setMinimumSize(new java.awt.Dimension(500, 500));
        setPreferredSize(new java.awt.Dimension(500, 500));
        setSize(new java.awt.Dimension(500, 500));
        getContentPane().setLayout(null);

        jMenu1.setText("Archivo");

        btnCargarAlumnos.setText("Cargar Alumnos");
        btnCargarAlumnos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarAlumnosActionPerformed(evt);
            }
        });
        jMenu1.add(btnCargarAlumnos);

        btnSalir.setText("Salir");
        jMenu1.add(btnSalir);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edicion");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCargarAlumnosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarAlumnosActionPerformed
        // TODO add your handling code here:
        javax.swing.JComboBox<String> comboBoxalumnos;
        comboBoxalumnos = new javax.swing.JComboBox<>();

        // leer archivo Alumnos.txt
        File archivo = new File("/home/isaac/Universidad/Programacion Visual/unedl_PV_2024A/src/SegundoParcial/tercerapractica/Alumnos.txt");

        // Initialize an ArrayList to store the names of the students
        ArrayList<String> Estudiantes = new ArrayList<>();

        try {
            BufferedReader br = new BufferedReader(new FileReader(archivo));
            String linea;
            while((linea = br.readLine()) != null){
                // Add each line (student's name) to the ArrayList
                Estudiantes.add(linea);
            }
            br.close();
        } catch (Exception e) {
            System.out.println("Error al leer archivo");
        }

        //ordena los nombres de los alumnos por orden alfabetico
        Estudiantes.sort(String::compareToIgnoreCase);



        //manda al combobox los nombres de los alumnos
        comboBoxalumnos.setModel(new javax.swing.DefaultComboBoxModel<>(Estudiantes.toArray(new String[0])));
        getContentPane().add(comboBoxalumnos);
        comboBoxalumnos.setBounds(100, 80, 250, 25);

        //se crean un boton que diga nuevo
        javax.swing.JButton btnNuevo = new javax.swing.JButton("Nuevo");
        getContentPane().add(btnNuevo);
        btnNuevo.setBounds(100, 120, 250, 25);

        //se crea un evento para el boton "nuevo"
        btnNuevo.addActionListener(e -> {
            //se esconde el boton nuevo
            btnNuevo.setVisible(false);
            //se crean un txtfield para el nombre y un boton para guardar
            javax.swing.JTextField txtNombre = new javax.swing.JTextField();
            getContentPane().add(txtNombre);
            txtNombre.setBounds(100, 160, 250, 25);

            javax.swing.JButton btnGuardar = new javax.swing.JButton("Guardar");
            getContentPane().add(btnGuardar);
            btnGuardar.setBounds(100, 200, 250, 25);

            //se crea un evento para el boton "guardar"
            btnGuardar.addActionListener(e2 -> {
                //se añade el nombre al combobox si el campo de texto no está vacío
                String nombreCompleto = txtNombre.getText();
                String[] partesNombre = nombreCompleto.split(" ");
                if (partesNombre.length >= 3) {
                    boolean valid = true;
                    for (String parte : partesNombre) {
                        if (parte.length() < 3 || !parte.matches("[a-zA-Z]+")) {
                            valid = false;
                            break;
                        }
                    }
                    if (valid) {
                        Estudiantes.add(nombreCompleto);
                        //se ordena el combobox
                        Estudiantes.sort(String::compareToIgnoreCase);
                        comboBoxalumnos.setModel(new javax.swing.DefaultComboBoxModel<>(Estudiantes.toArray(new String[0])));
                        //se manda el estudiante al archivo
                        try {
                            BufferedWriter bw = new BufferedWriter(new FileWriter(archivo, true));
                            bw.write(nombreCompleto);
                            bw.newLine();
                            bw.close();
                        } catch (Exception e3) {
                            System.out.println("Error al escribir en archivo");
                        }
                    } else {
                        // Mostrar un mensaje de error si el campo de texto no cumple con el formato
                        JOptionPane.showMessageDialog(null, "Cada parte del nombre (nombre y apellidos) debe tener al menos tres letras y solo contener letras", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    // Mostrar un mensaje de error si el campo de texto no cumple con el formato
                    JOptionPane.showMessageDialog(null, "Debe ingresar al menos un nombre y dos apellidos", "Error", JOptionPane.ERROR_MESSAGE);
                }
                //se esconde el txtfield y el boton guardar
                txtNombre.setVisible(false);
                btnGuardar.setVisible(false);
                //se muestra el boton nuevo
                btnNuevo.setVisible(true);
            });


        });


    }//GEN-LAST:event_btnCargarAlumnosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OrdenamientoAlumnos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OrdenamientoAlumnos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OrdenamientoAlumnos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OrdenamientoAlumnos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OrdenamientoAlumnos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem btnCargarAlumnos;
    private javax.swing.JMenuItem btnSalir;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    // End of variables declaration//GEN-END:variables
}
