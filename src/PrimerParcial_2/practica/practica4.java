/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package PrimerParcial_2.practica;

import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import java.io.*;
import java.util.Arrays;
import java.util.List;

/**
 * @author isaac
 */
public class practica4 extends javax.swing.JFrame {

    JFileChooser seleccionador = new JFileChooser();
    javax.swing.JTextArea txtDestino;

    /**
     * Creates new form practica4
     */
    public practica4() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        btnArchivo = new javax.swing.JMenu();
        btnSalir = new javax.swing.JMenuItem();
        btnAbrir = new javax.swing.JMenuItem();
        btnEdicion = new javax.swing.JMenu();
        btncopiar = new javax.swing.JMenuItem();
        btnPegar = new javax.swing.JMenuItem();
        btnCortar = new javax.swing.JMenuItem();
        btnInformacion = new javax.swing.JMenu();
        btnAcercade = new javax.swing.JMenuItem();
        btnVersion = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("practica 4");
        setMaximumSize(new java.awt.Dimension(600, 400));
        setMinimumSize(new java.awt.Dimension(600, 400));
        setPreferredSize(new java.awt.Dimension(600, 400));
        getContentPane().setLayout(null);

        btnArchivo.setText("Archivo");

        btnSalir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_DOWN_MASK));
        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        btnArchivo.add(btnSalir);

        btnAbrir.setText("Abrir");
        btnAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbrirActionPerformed(evt);
            }
        });
        btnArchivo.add(btnAbrir);

        jMenuBar1.add(btnArchivo);

        btnEdicion.setText("Edicion");

        btncopiar.setText("Copiar");
        btncopiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncopiarActionPerformed(evt);
            }
        });
        btnEdicion.add(btncopiar);

        btnPegar.setText("Pegar");
        btnPegar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPegarActionPerformed(evt);
            }
        });
        btnEdicion.add(btnPegar);

        btnCortar.setText("Cortar");
        btnCortar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCortarActionPerformed(evt);
            }
        });
        btnEdicion.add(btnCortar);

        jMenuBar1.add(btnEdicion);

        btnInformacion.setText("Informacion");

        btnAcercade.setText("Acerda de ");
        btnAcercade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcercadeActionPerformed(evt);
            }
        });
        btnInformacion.add(btnAcercade);

        btnVersion.setText("Version");
        btnVersion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVersionActionPerformed(evt);
            }
        });
        btnInformacion.add(btnVersion);

        jMenuBar1.add(btnInformacion);

        setJMenuBar(jMenuBar1);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        // TODO add your handling code here:
        int option = JOptionPane.showConfirmDialog(rootPane, "Esta seguro de que desea salir", "Ventana de slaida", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (option == JOptionPane.YES_OPTION) System.exit(0);

    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbrirActionPerformed
        // TODO add your handling code here:
        javax.swing.JScrollPane jScrollPane1 = new javax.swing.JScrollPane();


        txtDestino = new javax.swing.JTextArea();


        txtDestino.setColumns(20);
        txtDestino.setRows(5);
        jScrollPane1.setViewportView(txtDestino);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(120, 90, 320, 140);


        try {
            // Muestra un cuadro de diálogo para seleccionar un archivo
            seleccionador.showDialog(this, "Selecciona");
            // Obtiene el archivo seleccionado
            File archivo = seleccionador.getSelectedFile();

            // Verifica si se seleccionó un archivo
            if (archivo != null) {
                // Obtiene el nombre del archivo seleccionado
                String filename = archivo.getName();
                // Extrae la extensión del archivo del nombre del archivo
                String extension = filename.substring(filename.lastIndexOf(".") + 1, filename.length());

                // Lista de extensiones de archivo permitidas
                List<String> Extenciones = Arrays.asList("txt", "doc", "docx", "csv", "rtf");

                // Verifica si la extensión del archivo seleccionado está en la lista de extensiones permitidas
                if (Extenciones.contains(extension)) {
                    // Obtiene la ruta absoluta del archivo
                    String pathname = archivo.getAbsolutePath();
                    // Crea un BufferedReader para leer el contenido del archivo
                    BufferedReader br = new BufferedReader(new FileReader(pathname));
                    // Crea un StringBuilder para almacenar el contenido del archivo
                    StringBuilder cad = new StringBuilder();
                    String line;
                    // Lee cada línea del archivo y la agrega al StringBuilder
                    while ((line = br.readLine()) != null) {
                        cad.append(line).append("\n");
                    }
                    // Establece el texto del JTextArea txtDestino al contenido del archivo leído
                    txtDestino.setText(cad.toString());
                } else {
                    // Si la extensión del archivo no está en la lista de extensiones permitidas, muestra un mensaje de error
                    JOptionPane.showMessageDialog(rootPane, "Solo se permiten archivos .txt, .doc, .docx, .csv y .rtf", "Error de formato de archivo", JOptionPane.ERROR_MESSAGE);
                }
            }
            // Captura cualquier excepción de tipo IOException que pueda ocurrir durante la lectura del archivo y muestra un mensaje de error en la consola
        } catch (IOException e) {
            System.out.println("error");
        }


    }//GEN-LAST:event_btnAbrirActionPerformed

    private void btnVersionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVersionActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(rootPane, "Version 1.4", "Version de la aplicacion", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btnVersionActionPerformed

    private void btnAcercadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcercadeActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(rootPane, "Isaac Diaz Rodriguez\nUniversidad Enrique Diaz De Leon\nIngeneria en software", "Acerca de", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btnAcercadeActionPerformed

    private void btncopiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncopiarActionPerformed
        // TODO add your handling code here:
        if (txtDestino.getSelectedText() != null) {
            txtDestino.copy();
        } else {
            JOptionPane.showMessageDialog(rootPane, "No se ha seleccionado texto para copiar", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btncopiarActionPerformed

    private void btnPegarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPegarActionPerformed
        // TODO add your handling code here:
        txtDestino.paste();
    }//GEN-LAST:event_btnPegarActionPerformed

    private void btnCortarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCortarActionPerformed
        // TODO add your handling code here:
        txtDestino.cut();
    }//GEN-LAST:event_btnCortarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(practica4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(practica4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(practica4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(practica4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new practica4().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem btnAbrir;
    private javax.swing.JMenuItem btnAcercade;
    private javax.swing.JMenu btnArchivo;
    private javax.swing.JMenuItem btnCortar;
    private javax.swing.JMenu btnEdicion;
    private javax.swing.JMenu btnInformacion;
    private javax.swing.JMenuItem btnPegar;
    private javax.swing.JMenuItem btnSalir;
    private javax.swing.JMenuItem btnVersion;
    private javax.swing.JMenuItem btncopiar;
    private javax.swing.JMenuBar jMenuBar1;
    // End of variables declaration//GEN-END:variables
}
